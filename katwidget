<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>kat_3D Card Animation Widget</title>
  <style>
    body {
      margin: 0;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: #000;
      overflow: hidden;
    }

    .widget {
      perspective: 1000px;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 300px;
      height: 450px;
    }

    .card {
      width: 100%;
      height: 100%;
      position: relative;
      transform-style: preserve-3d;
      animation: rotate 15s linear infinite;
      transition: transform 0.8s;
      cursor: grab;
    }

    @keyframes rotate {
      0% {
        transform: rotateY(0deg);
      }
      100% {
        transform: rotateY(360deg);
      }
    }

    .card:hover {
      transform: scale(1.5);
      box-shadow: 0 0 20px rgba(192, 192, 192, 0.8);
    }

    .card-face {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      border-radius: 5px;
      box-shadow: 0 0 20px rgba(192, 192, 192, 0.8),
                  0 0 30px rgba(192, 192, 192, 0.6), 
                  0 0 80px rgba(192, 192, 192, 0.4),
                  0 0 30px #FF0800;
      overflow: hidden;
      border: 5px solid rgba(192, 192, 192, 0.9);
      background-size: cover;
      background-position: center;
    }

    .front {
      background-image: url("https://github.com/rosesceo/we-images/blob/main/Screenshot_2024-08-10-21-54-33-22_54b2a15d7a6afd7c8f86504ff0ee5fbf.jpg?raw=true");
    }

    .back {
      transform: rotateY(180deg);
      background-color: #000;
      color: #c0c0c0;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
      font-size: 20px;
      text-align: center;
      box-shadow: 0 0 5px rgba(192, 192, 192, 0.8),
                  0 0 20px rgba(192, 192, 192, 0.6), 
                  0 0 20px rgba(192, 192, 192, 0.4),
                  0 0 30px #c0c0c0;
    }

    .elite-glow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(45deg, #ff0000, #ff7f00, #ffff00, #00ff00, #0000ff, #4b0082, #9400d3);
      opacity: 0;
      transition: opacity 0.5s;
      z-index: -1;
      animation: elite-glow 3s linear infinite;
    }

    @keyframes elite-glow {
      0% {
        opacity: 0;
      }
      50% {
        opacity: 0.8;
      }
      100% {
        opacity: 0;
      }
    }
  </style>
</head>
<body>
  <div class="widget">
    <div class="card">
      <div class="elite-glow"></div>
      <div class="card-face front"></div>
      <div class="card-face back">
        She conquered her demons and wore her scars like wings.
      </div>
    </div>
  </div>

  <audio id="backgroundMusic" autoplay loop muted>
    <source src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" type="audio/mpeg">
  </audio>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      var card = document.querySelector(".card");
      var isDragging = false;
      var startPosition = { x: 0, y: 0 };
      var currentRotation = { x: 0, y: 0 };
      var spinDirection = 1;
      var spinSpeed = 0.5;
      var spinInterval;

      // Spin function
      function startSpinAnimation() {
        stopSpinAnimation();
        spinInterval = setInterval(function () {
          currentRotation.y += spinDirection * spinSpeed;
          card.style.transform =
            "rotateX(" +
            currentRotation.x +
            "deg) rotateY(" +
            currentRotation.y +
            "deg)";
        }, 10);
      }

      function stopSpinAnimation() {
        clearInterval(spinInterval);
      }

      // Grab function
      card.addEventListener("mousedown", function (e) {
        e.preventDefault();
        isDragging = true;
        startPosition = {
          x: e.clientX,
          y: e.clientY
        };
        currentRotation = {
          x: parseFloat(card.getAttribute("data-rotation-x")) || 0,
          y: parseFloat(card.getAttribute("data-rotation-y")) || 0
        };
        stopSpinAnimation();
      });

      // Move freely on viewpoint function
      document.addEventListener("mousemove", function (e) {
        if (isDragging) {
          var currentPosition = {
            x: e.clientX,
            y: e.clientY
          };
          var deltaX = currentPosition.x - startPosition.x;
          var deltaY = currentPosition.y - startPosition.y;
          var newRotationY = currentRotation.y + deltaX / 2;
          var newRotationX = currentRotation.x - deltaY / 2;
          card.style.transform =
            "rotateX(" + newRotationX + "deg) rotateY(" + newRotationY + "deg)";
          card.setAttribute("data-rotation-x", newRotationX);
          card.setAttribute("data-rotation-y", newRotationY);
        }
      });

      // Reverse spin by grabbing and dragging opposite function
      document.addEventListener("mouseup", function (e) {
        isDragging = false;
        var currentPosition = {
          x: e.clientX,
          y: e.clientY
        };
        var deltaX = currentPosition.x - startPosition.x;
        if (deltaX < 0) {
          spinDirection = 1;
        } else if (deltaX > 0) {
          spinDirection = -1;
        }
        startSpinAnimation();
      });

      // Ensure music plays after user interaction
      var backgroundMusic = document.getElementById("backgroundMusic");
      var hasInteracted = false;

      document.addEventListener("click", function() {
        if (!hasInteracted) {
          backgroundMusic.muted = false;
          backgroundMusic.play();
          hasInteracted = true;
        }
      });

      // Start initial spin animation
      startSpinAnimation();
    });
  </script>
</body>
</html>
